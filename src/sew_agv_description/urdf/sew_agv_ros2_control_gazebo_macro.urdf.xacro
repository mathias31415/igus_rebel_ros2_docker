<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:macro name="sew_ros2_control_gazebo" params="tf_prefix">

    <!--#######################################################################################################################################-->
    <!--set up the ros2 control plugin for the sew diff drive controller-->
    <!--#######################################################################################################################################-->
    <gazebo>
        <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
          <robot_param>robot_description</robot_param>
          <robot_param_node>robot_state_publisher</robot_param_node>
          <parameters>$(find sew_and_igus_moveit_config)/config/ros2_controllers_simulation.yaml</parameters>   <!--load controller configs for agv AND arm-->
          <controller_manager_name>controller_manager</controller_manager_name>
        </plugin>
    </gazebo>

    <!--#######################################################################################################################################-->
    <!--define gazebo tags for materials, because urdf materialc can not be used in gazebo -->
    <!--#######################################################################################################################################-->

        <gazebo reference="${tf_prefix}caster_wheel_link">
            <material> Gazebo/Black</material>
        </gazebo>

        <gazebo reference="${tf_prefix}right_wheel_link">
            <material> Gazebo/Black</material>
        </gazebo>

        <gazebo reference="${tf_prefix}left_wheel_link">
            <material> Gazebo/Black</material>
        </gazebo>

        <gazebo reference="${tf_prefix}body_link">
            <material> Gazebo/Grey</material>
        </gazebo>

        <gazebo reference="${tf_prefix}lidar_link">
            <material> Gazebo/Yellow</material>
        </gazebo>

    <!--#######################################################################################################################################-->
    <!--set friction of the caster wheel to nearly 0 (for simplicity reasons) -->
    <!--#######################################################################################################################################-->

        <gazebo reference="${tf_prefix}caster_wheel_link">
            <mu1 value="0.001"/>
            <mu2 value="0.001"/>
        </gazebo>
    
    <!--#######################################################################################################################################-->
    <!--include lidar sensor simulation on lidar link -->
    <!--#######################################################################################################################################-->
        <gazebo reference="${tf_prefix}lidar_link">
            <sensor type="ray" name="lidar_1">
                <pose> 0 0 0 0 0 0 </pose>      <!--define offset to lidar_link frame-->
                <visualize>true</visualize>
                <update_rate>10</update_rate>
                <ray>                               <!--define field of view-->
                    <scan>
                        <horizontal>
                            <samples>720</samples>
                            <min_angle>-2</min_angle>
                            <max_angle>2</max_angle>
                        </horizontal>
                    </scan>
                    <range>
                        <min>0.3</min>
                        <max>20</max>
                    </range>
                </ray>
                <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">     <!--call gazebo plugin for lidar-->
                    <ros>
                        <argument>~/out:=scan</argument>        <!--define output topic-->
                    </ros>
                    <output_type>sensor_msgs/LaserScan</output_type>
                    <frame_name>sew_lidar_link</frame_name>
                </plugin>
            </sensor>
        </gazebo>

    </xacro:macro>
</robot>